/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package mobilecenter.pkg8;

import java.awt.Desktop;
import java.awt.HeadlessException;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.awt.event.WindowEvent;
import java.awt.print.PrinterException;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.StringWriter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.filechooser.FileSystemView;
import javax.swing.table.DefaultTableModel;
import java.util.ArrayList;
import java.util.List;
import javax.swing.RowSorter;
import javax.swing.SortOrder;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Chanda Jaiswal
 */
public class MobileCenterInfo extends javax.swing.JFrame {

    /**
     * Creates new form MobileCenterInfo
     */
    ArrayList < Integer> Price;
    public MobileCenterInfo() {
        initComponents();
        //dataTable.setAutoCreateRowSorter(true);
        
        Price= new ArrayList<>();
    }
 
    public void close(){
        WindowEvent closeWindow = new WindowEvent(this, WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(closeWindow);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        RBbuttonGroup = new javax.swing.ButtonGroup();
        jMenuItem1 = new javax.swing.JMenuItem();
        Panel = new javax.swing.JPanel();
        titleLbl = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        dataTable = new javax.swing.JTable();
        searchPanel = new javax.swing.JPanel();
        searchPLbl = new javax.swing.JLabel();
        searchPCB = new javax.swing.JComboBox<>();
        searchPriceLbl = new javax.swing.JLabel();
        searchPriceTxtFld = new javax.swing.JTextField();
        AvailableBtn = new javax.swing.JButton();
        searchBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        addPanel = new javax.swing.JPanel();
        addBrandLbl = new javax.swing.JLabel();
        addModelLbl = new javax.swing.JLabel();
        addColorLbl = new javax.swing.JLabel();
        addStorageLbl = new javax.swing.JLabel();
        addBatteryLbl = new javax.swing.JLabel();
        addPriceLbl = new javax.swing.JLabel();
        addBrandCB = new javax.swing.JComboBox<>();
        typeTxtFld = new javax.swing.JTextField();
        modelTxtFld = new javax.swing.JTextField();
        batteryTxtFld = new javax.swing.JTextField();
        colorTxtFld = new javax.swing.JTextField();
        RB32 = new javax.swing.JRadioButton();
        RB64 = new javax.swing.JRadioButton();
        RB128 = new javax.swing.JRadioButton();
        RB256 = new javax.swing.JRadioButton();
        RB512 = new javax.swing.JRadioButton();
        addBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        updateBtn = new javax.swing.JButton();
        clearBtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        idLbl = new javax.swing.JLabel();
        idTxtFld = new javax.swing.JTextField();
        priceTxtFld = new javax.swing.JTextField();
        typeLbl = new javax.swing.JLabel();
        billBtn = new javax.swing.JButton();
        arrBtn = new javax.swing.JButton();
        MenuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        openMenu = new javax.swing.JMenuItem();
        exitMenu = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        umMenu = new javax.swing.JMenuItem();
        aboutMenu = new javax.swing.JMenuItem();

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        Panel.setBackground(new java.awt.Color(86, 127, 138));
        Panel.setForeground(new java.awt.Color(51, 51, 51));

        titleLbl.setBackground(new java.awt.Color(204, 255, 204));
        titleLbl.setFont(new java.awt.Font("Lucida Fax", 1, 24)); // NOI18N
        titleLbl.setForeground(new java.awt.Color(255, 255, 255));
        titleLbl.setText("Mobile Center Information System");

        dataTable.setBackground(new java.awt.Color(204, 204, 204));
        dataTable.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        dataTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Model ID", "Type", "Brand Name", "Model Name", "Storage", "Color", "Battery(mAh)", "Price(Rs.)"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        dataTable.getTableHeader().setReorderingAllowed(false);
        dataTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dataTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(dataTable);
        if (dataTable.getColumnModel().getColumnCount() > 0) {
            dataTable.getColumnModel().getColumn(0).setResizable(false);
            dataTable.getColumnModel().getColumn(1).setResizable(false);
            dataTable.getColumnModel().getColumn(2).setResizable(false);
            dataTable.getColumnModel().getColumn(3).setResizable(false);
            dataTable.getColumnModel().getColumn(4).setResizable(false);
            dataTable.getColumnModel().getColumn(5).setResizable(false);
            dataTable.getColumnModel().getColumn(6).setResizable(false);
            dataTable.getColumnModel().getColumn(7).setResizable(false);
        }

        searchPanel.setBackground(new java.awt.Color(138, 182, 193));

        searchPLbl.setFont(new java.awt.Font("Lucida Fax", 1, 14)); // NOI18N
        searchPLbl.setForeground(new java.awt.Color(255, 255, 255));
        searchPLbl.setText("Brand Name :");

        searchPCB.setFont(new java.awt.Font("Lucida Fax", 1, 12)); // NOI18N
        searchPCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Brand Name", "APPLE", "XIAOMI", "NOKIA", "SAMSUNG", "ONEPLUS", "LAVA" }));

        searchPriceLbl.setFont(new java.awt.Font("Lucida Fax", 1, 14)); // NOI18N
        searchPriceLbl.setForeground(new java.awt.Color(255, 255, 255));
        searchPriceLbl.setText("Price :");

        searchPriceTxtFld.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                searchPriceTxtFldKeyPressed(evt);
            }
        });

        AvailableBtn.setBackground(new java.awt.Color(204, 204, 204));
        AvailableBtn.setFont(new java.awt.Font("Lucida Fax", 1, 14)); // NOI18N
        AvailableBtn.setText("Available Products");
        AvailableBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AvailableBtnActionPerformed(evt);
            }
        });

        searchBtn.setBackground(new java.awt.Color(204, 204, 204));
        searchBtn.setFont(new java.awt.Font("Lucida Fax", 1, 14)); // NOI18N
        searchBtn.setText("Search");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Lucida Fax", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Search");

        javax.swing.GroupLayout searchPanelLayout = new javax.swing.GroupLayout(searchPanel);
        searchPanel.setLayout(searchPanelLayout);
        searchPanelLayout.setHorizontalGroup(
            searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(searchPLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(AvailableBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(searchPCB, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 70, Short.MAX_VALUE)
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, searchPanelLayout.createSequentialGroup()
                        .addComponent(searchPriceLbl)
                        .addGap(18, 18, 18)
                        .addComponent(searchPriceTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, searchPanelLayout.createSequentialGroup()
                        .addComponent(searchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, searchPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(253, 253, 253))
        );
        searchPanelLayout.setVerticalGroup(
            searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchPanelLayout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchPLbl)
                    .addComponent(searchPCB, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchPriceLbl)
                    .addComponent(searchPriceTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AvailableBtn)
                    .addComponent(searchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        addPanel.setBackground(new java.awt.Color(138, 182, 193));

        addBrandLbl.setFont(new java.awt.Font("Lucida Fax", 1, 14)); // NOI18N
        addBrandLbl.setForeground(new java.awt.Color(255, 255, 255));
        addBrandLbl.setText("Brand Name :");

        addModelLbl.setFont(new java.awt.Font("Lucida Fax", 1, 14)); // NOI18N
        addModelLbl.setForeground(new java.awt.Color(255, 255, 255));
        addModelLbl.setText("Model Name :");

        addColorLbl.setFont(new java.awt.Font("Lucida Fax", 1, 14)); // NOI18N
        addColorLbl.setForeground(new java.awt.Color(255, 255, 255));
        addColorLbl.setText("Color :");

        addStorageLbl.setFont(new java.awt.Font("Lucida Fax", 1, 14)); // NOI18N
        addStorageLbl.setForeground(new java.awt.Color(255, 255, 255));
        addStorageLbl.setText("Storage :");

        addBatteryLbl.setBackground(new java.awt.Color(255, 255, 255));
        addBatteryLbl.setFont(new java.awt.Font("Lucida Fax", 1, 14)); // NOI18N
        addBatteryLbl.setForeground(new java.awt.Color(255, 255, 255));
        addBatteryLbl.setText("Battery :");

        addPriceLbl.setFont(new java.awt.Font("Lucida Fax", 1, 14)); // NOI18N
        addPriceLbl.setForeground(new java.awt.Color(255, 255, 255));
        addPriceLbl.setText("Price :");

        addBrandCB.setFont(new java.awt.Font("Lucida Fax", 1, 12)); // NOI18N
        addBrandCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Brand Name", "APPLE", "XIAOMI", "NOKIA", "SAMSUNG", "ONE PLUS", "LAVA", " " }));

        typeTxtFld.setSelectedTextColor(new java.awt.Color(0, 0, 0));
        typeTxtFld.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                typeTxtFldKeyPressed(evt);
            }
        });

        modelTxtFld.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                modelTxtFldKeyPressed(evt);
            }
        });

        batteryTxtFld.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                batteryTxtFldKeyPressed(evt);
            }
        });

        colorTxtFld.setDisabledTextColor(new java.awt.Color(255, 255, 0));
        colorTxtFld.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                colorTxtFldKeyPressed(evt);
            }
        });

        RB32.setBackground(new java.awt.Color(255, 255, 255));
        RBbuttonGroup.add(RB32);
        RB32.setFont(new java.awt.Font("Lucida Fax", 1, 12)); // NOI18N
        RB32.setForeground(new java.awt.Color(255, 255, 255));
        RB32.setText("32 GB");

        RB64.setBackground(new java.awt.Color(255, 255, 255));
        RBbuttonGroup.add(RB64);
        RB64.setFont(new java.awt.Font("Lucida Fax", 1, 12)); // NOI18N
        RB64.setForeground(new java.awt.Color(255, 255, 255));
        RB64.setText("64 GB");

        RB128.setBackground(new java.awt.Color(255, 255, 255));
        RBbuttonGroup.add(RB128);
        RB128.setFont(new java.awt.Font("Lucida Fax", 1, 12)); // NOI18N
        RB128.setForeground(new java.awt.Color(255, 255, 255));
        RB128.setText("128 GB");

        RB256.setBackground(new java.awt.Color(255, 255, 255));
        RBbuttonGroup.add(RB256);
        RB256.setFont(new java.awt.Font("Lucida Fax", 1, 12)); // NOI18N
        RB256.setForeground(new java.awt.Color(255, 255, 255));
        RB256.setText("256 GB");

        RB512.setBackground(new java.awt.Color(255, 255, 255));
        RBbuttonGroup.add(RB512);
        RB512.setFont(new java.awt.Font("Lucida Fax", 1, 12)); // NOI18N
        RB512.setForeground(new java.awt.Color(255, 255, 255));
        RB512.setText("512 GB");

        addBtn.setFont(new java.awt.Font("Lucida Fax", 1, 14)); // NOI18N
        addBtn.setText("ADD");
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        deleteBtn.setBackground(new java.awt.Color(204, 204, 204));
        deleteBtn.setFont(new java.awt.Font("Lucida Fax", 1, 14)); // NOI18N
        deleteBtn.setText("DELETE");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        updateBtn.setBackground(new java.awt.Color(204, 204, 204));
        updateBtn.setFont(new java.awt.Font("Lucida Fax", 1, 14)); // NOI18N
        updateBtn.setText("UPDATE");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });

        clearBtn.setBackground(new java.awt.Color(204, 204, 204));
        clearBtn.setFont(new java.awt.Font("Lucida Fax", 1, 14)); // NOI18N
        clearBtn.setText("CLEAR");
        clearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBtnActionPerformed(evt);
            }
        });

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Lucida Fax", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Add Specification");

        idLbl.setFont(new java.awt.Font("Lucida Fax", 1, 14)); // NOI18N
        idLbl.setForeground(new java.awt.Color(255, 255, 255));
        idLbl.setText("Model ID :");

        idTxtFld.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        idTxtFld.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                idTxtFldKeyPressed(evt);
            }
        });

        priceTxtFld.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                priceTxtFldKeyPressed(evt);
            }
        });

        typeLbl.setFont(new java.awt.Font("Lucida Fax", 1, 14)); // NOI18N
        typeLbl.setForeground(new java.awt.Color(255, 255, 255));
        typeLbl.setText("Type :");

        javax.swing.GroupLayout addPanelLayout = new javax.swing.GroupLayout(addPanel);
        addPanel.setLayout(addPanelLayout);
        addPanelLayout.setHorizontalGroup(
            addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addPanelLayout.createSequentialGroup()
                        .addGap(0, 25, Short.MAX_VALUE)
                        .addComponent(deleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(92, 92, 92)
                        .addComponent(updateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addPanelLayout.createSequentialGroup()
                        .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, addPanelLayout.createSequentialGroup()
                                .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(addPanelLayout.createSequentialGroup()
                                        .addComponent(addModelLbl)
                                        .addGap(7, 7, 7))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addPanelLayout.createSequentialGroup()
                                        .addComponent(typeLbl)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                                .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(typeTxtFld)
                                    .addComponent(modelTxtFld)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, addPanelLayout.createSequentialGroup()
                                .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(addBrandLbl)
                                    .addComponent(idLbl, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(idTxtFld)
                                    .addComponent(addBrandCB, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(34, 34, 34)))
                .addGap(32, 32, 32)
                .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(addBatteryLbl)
                    .addComponent(addColorLbl)
                    .addComponent(addStorageLbl)
                    .addComponent(addPriceLbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addPanelLayout.createSequentialGroup()
                        .addComponent(RB32, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(addPanelLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(RB64, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(RB128)
                                .addContainerGap())
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addPanelLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addPanelLayout.createSequentialGroup()
                                        .addComponent(RB256)
                                        .addGap(16, 16, 16)
                                        .addComponent(RB512)
                                        .addGap(31, 31, 31))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addPanelLayout.createSequentialGroup()
                                        .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(addBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(clearBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(54, 54, 54))))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addPanelLayout.createSequentialGroup()
                        .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(batteryTxtFld, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(colorTxtFld, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(priceTxtFld))
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(277, 277, 277))
        );
        addPanelLayout.setVerticalGroup(
            addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addPanelLayout.createSequentialGroup()
                .addComponent(jLabel2)
                .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addPanelLayout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addStorageLbl)
                            .addComponent(RB32)
                            .addComponent(RB64)
                            .addComponent(RB128))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(RB256)
                            .addComponent(RB512))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addBrandCB, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addBrandLbl))
                        .addGap(22, 22, 22)))
                .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(batteryTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addBatteryLbl)
                    .addComponent(idTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(idLbl))
                .addGap(16, 16, 16)
                .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(colorTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addColorLbl)
                    .addComponent(typeTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(typeLbl))
                .addGap(18, 18, 18)
                .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(modelTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(priceTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addPriceLbl)
                    .addComponent(addModelLbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addComponent(addBtn)
                .addGap(17, 17, 17)
                .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteBtn)
                    .addComponent(updateBtn)
                    .addComponent(clearBtn))
                .addContainerGap())
        );

        billBtn.setBackground(new java.awt.Color(204, 204, 204));
        billBtn.setFont(new java.awt.Font("Lucida Fax", 0, 14)); // NOI18N
        billBtn.setText("BILL");
        billBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                billBtnActionPerformed(evt);
            }
        });

        arrBtn.setFont(new java.awt.Font("Lucida Fax", 0, 12)); // NOI18N
        arrBtn.setText("SORT");
        arrBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arrBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelLayout = new javax.swing.GroupLayout(Panel);
        Panel.setLayout(PanelLayout);
        PanelLayout.setHorizontalGroup(
            PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(addPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(PanelLayout.createSequentialGroup()
                        .addComponent(searchPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(billBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(arrBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(10, 10, 10)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(titleLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 457, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(102, 102, 102))
        );
        PanelLayout.setVerticalGroup(
            PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(searchPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(PanelLayout.createSequentialGroup()
                        .addComponent(billBtn)
                        .addGap(18, 18, 18)
                        .addComponent(arrBtn)))
                .addGap(18, 18, 18)
                .addComponent(addPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        MenuBar.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N

        fileMenu.setText("File");

        openMenu.setText("Open");
        openMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openMenuActionPerformed(evt);
            }
        });
        fileMenu.add(openMenu);

        exitMenu.setText("Exit");
        exitMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenu);

        MenuBar.add(fileMenu);

        helpMenu.setText("Help");
        helpMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpMenuActionPerformed(evt);
            }
        });

        umMenu.setText("User manual");
        umMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                umMenuActionPerformed(evt);
            }
        });
        helpMenu.add(umMenu);

        aboutMenu.setText("About");
        aboutMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutMenuActionPerformed(evt);
            }
        });
        helpMenu.add(aboutMenu);

        MenuBar.add(helpMenu);

        setJMenuBar(MenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void billBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_billBtnActionPerformed
        // TODO add your handling code here:
        close();
        MobileCenterBillInfo billinfo = new MobileCenterBillInfo();
        billinfo.setVisible(true);
        
        
    }//GEN-LAST:event_billBtnActionPerformed

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        // TODO add your handling code here:
        
        try {
            int Id = Integer.parseInt(idTxtFld.getText());
            String Brand = (String) addBrandCB.getSelectedItem();
            int brandIndex = addBrandCB.getSelectedIndex();
            String Category = typeTxtFld.getText();
            String Model = modelTxtFld.getText();
            String Storage = "";
            if (RB32.isSelected()){
                Storage = RB32.getText();
            }
            if (RB64.isSelected()){
                Storage = RB64.getText();
            }
            if (RB128.isSelected()){
                Storage = RB128.getText();
            }
            if (RB256.isSelected()){
                Storage = RB256.getText();
            }
            if (RB512.isSelected()){
                Storage = RB512.getText();
            }
            String Battery = colorTxtFld.getText();
            String Color = batteryTxtFld.getText();
            String Price = priceTxtFld.getText(); 
            
            int nextRow =0;
            int rowCount = dataTable.getRowCount();
            int colCount = dataTable.getColumnCount();
            boolean empty = false;
            boolean rowFlag = false;
            boolean equalFlag = false;
           
            
            
            if(Id > 0){
            if (brandIndex != 0){
            if (!Category.isEmpty()){
            if (!Model.isEmpty()){  
            if (!Storage.isEmpty()){
            if (!Battery.isEmpty()){
            if (!Color.isEmpty()){
            if (!Price.isEmpty()){
                
                String details[] = {String.valueOf(Id),  Category, Brand, Model, Storage, Battery,
                    Color, Price};
                String value;
                
                DefaultTableModel tblModel = (DefaultTableModel) dataTable.getModel();
                
                
                tblModel.addRow(details);
               
                
                for (int i = 0; i < colCount; i++) {
                    
                    dataTable.setValueAt(details[i],rowCount,i);
                    
                }
                            
                }
            else{
                JOptionPane.showMessageDialog(this, "Please enter the price !!!");
            }
            } else {
                JOptionPane.showMessageDialog(this, "Please enter the battey capacity !!!");
            }
            } else {
                JOptionPane.showMessageDialog(this, "Please enter the color !!!");
            }
            } else {
                JOptionPane.showMessageDialog(this, "Please enter the storage !!!");
            }
            } else {
                JOptionPane.showMessageDialog(this, "Please enter the model name !!!");
            }
            } else {
                JOptionPane.showMessageDialog(this, "Please enter the type !!!");
            }
            } else {
                JOptionPane.showMessageDialog(this, "Please enter the brand name !!!");
            }
            } else {
                JOptionPane.showMessageDialog(this, "Please enter the model ID !!!");
            }
            
            
        
    }
        catch(NumberFormatException e){
            JOptionPane.showMessageDialog(this, "Please fill all the fields !!!");
        }
        catch(HeadlessException e){
            JOptionPane.showMessageDialog(this, "Invalid Input", "Error", JOptionPane.ERROR_MESSAGE);
        }
        

                
                
                
                
            
    }//GEN-LAST:event_addBtnActionPerformed

    private void openMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openMenuActionPerformed
        // TODO add your handling code here:
        String filePath = "src\\Resources\\Specification.txt";
        File file = new File(filePath);
        
        FileReader fr;
        try {
            fr = new FileReader(file);
            BufferedReader br = new BufferedReader(fr);
            //get the first line
            //get the column name from the first line
            //set columns name to the jtable model
            String firstLine = br.readLine().trim();
            String[] col = firstLine.split(",");
            
            DefaultTableModel model = (DefaultTableModel)dataTable.getModel();
            model.setColumnIdentifiers(col);
            //get line from txt file
            Object [] lines = br.lines().toArray();
            //extract data from lines
            //set data to jtable model
            for(int i = 0; i < lines.length; i++){
                String line = lines[i].toString().trim();
                String [] dataRow = line.split("/");
                model.addRow(dataRow);
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(MobileCenterInfo.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(MobileCenterInfo.class.getName()).log(Level.SEVERE, null, ex);
        }
       
        
        
    }//GEN-LAST:event_openMenuActionPerformed

    private void dataTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dataTableMouseClicked
        // TODO add your handling code here:
        //set data to their textfield
        DefaultTableModel tblModel = (DefaultTableModel)dataTable.getModel();
        //set data to textfield when row is selected
        String tblID = tblModel.getValueAt(dataTable.getSelectedRow(), 0).toString();
        String tblCategory = tblModel.getValueAt(dataTable.getSelectedRow(), 1).toString();
        String tblBrand = tblModel.getValueAt(dataTable.getSelectedRow(), 2).toString();
        String tblModelN = tblModel.getValueAt(dataTable.getSelectedRow(), 3).toString();
        String tblStorage = tblModel.getValueAt(dataTable.getSelectedRow(), 4).toString();
        String tblColor = tblModel.getValueAt(dataTable.getSelectedRow(), 6).toString();
        String tblBattery = tblModel.getValueAt(dataTable.getSelectedRow(), 5).toString();
        String tblPrice = tblModel.getValueAt(dataTable.getSelectedRow(), 7).toString();
        
        //set to textfield
        idTxtFld.setText(tblID);
        typeTxtFld.setText(tblCategory);
        addBrandCB.setSelectedItem(tblBrand);
        modelTxtFld.setText(tblModelN);
        if(tblStorage.equals("32GB")){
            RB32.setSelected(true);
        }
        else if(tblStorage.equals("64GB")){
            RB64.setSelected(true);
        }
        else if(tblStorage.equals("128GB")){
            RB128.setSelected(true);
        }
        else if(tblStorage.equals("256GB")){
            RB256.setSelected(true);
        }
        else if(tblStorage.equals("512GB")){
            RB512.setSelected(true);
        }
        //RB32.setSelectedItem(tblStorage);
        batteryTxtFld.setText(tblColor);
        colorTxtFld.setText(tblBattery);
        priceTxtFld.setText(tblPrice);
        
        
        
    }//GEN-LAST:event_dataTableMouseClicked

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        // TODO add your handling code here:
        DefaultTableModel tblModel = (DefaultTableModel)dataTable.getModel();
        if(dataTable.getSelectedRowCount()== 1){
            //if single row is selected than update
            
            String id = idTxtFld.getText();
            String category = typeTxtFld.getText();
            String Brand = (String) addBrandCB.getSelectedItem();
            int brandIndex = addBrandCB.getSelectedIndex();
            String model = modelTxtFld.getText();
            String storage = "";
            if (RB32.isSelected()){
                storage = RB32.getText();
            }
            if (RB64.isSelected()){
                storage = RB64.getText();
            }
            if (RB128.isSelected()){
                storage = RB128.getText();
            }
            if (RB256.isSelected()){
                storage = RB256.getText();
            }
            if (RB512.isSelected()){
                storage = RB512.getText();
            }
            String battery = colorTxtFld.getText();
            String color = batteryTxtFld.getText();
            String price = priceTxtFld.getText(); 
            
            tblModel.setValueAt(id, dataTable.getSelectedRow(), 0);
            tblModel.setValueAt(category, dataTable.getSelectedRow(), 1);
            tblModel.setValueAt(Brand, dataTable.getSelectedRow(), 2);
            tblModel.setValueAt(model, dataTable.getSelectedRow(), 3);
            tblModel.setValueAt(storage, dataTable.getSelectedRow(), 4);
            tblModel.setValueAt(battery, dataTable.getSelectedRow(), 5);
            tblModel.setValueAt(color, dataTable.getSelectedRow(), 6);
            tblModel.setValueAt(price, dataTable.getSelectedRow(), 7);
            
               
            JOptionPane.showMessageDialog(this, "Update Successfull !!!");
            
        } else {
            if(dataTable.getRowCount()==0){
                //if table is empty
                JOptionPane.showMessageDialog(this, "Table is Empty !!!");
            } else{
                //if row is not selected or multiple row is selected
                JOptionPane.showMessageDialog(this, "Please select a single row for update !!!");
            }
        }
        
        
       
        
        
    }//GEN-LAST:event_updateBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        // TODO add your handling code here:
        //get jtable first
        DefaultTableModel tblModel = (DefaultTableModel)dataTable.getModel();
         
        //delete row
        if(dataTable.getSelectedRowCount()==1){ //1
            //if single row is selected 
            tblModel.removeRow(dataTable.getSelectedRow());
             
             
        } else{
            if(dataTable.getRowCount()==0){
                 //IF TABLE IS empty
                JOptionPane.showMessageDialog(this, "Table is Empty !!!");
            } else {
                //if row is not selected
                JOptionPane.showMessageDialog(this, "Please select single row to delete !!!");
                         
             }
         }

    }//GEN-LAST:event_deleteBtnActionPerformed

    private void clearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearBtnActionPerformed
        // TODO add your handling code here:
        idTxtFld.setText("");
        typeTxtFld.setText("");
        addBrandCB.setSelectedIndex(0);
        modelTxtFld.setText("");
        RBbuttonGroup.clearSelection();
        colorTxtFld.setText("");
        batteryTxtFld.setText("");
        priceTxtFld.setText("");


        
    }//GEN-LAST:event_clearBtnActionPerformed

    private void priceTxtFldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_priceTxtFldKeyPressed
        // TODO add your handling code here:
        char c=evt.getKeyChar();
        if(Character.isDigit(c)||(c==evt.VK_BACK_SPACE)||(c==evt.VK_DELETE)){
            priceTxtFld.setEditable(true);
        }else{
         
            priceTxtFld.setEditable(false);
            JOptionPane.showMessageDialog(null, "Please enter numeric value only !!!");
            
           
        }
        
    }//GEN-LAST:event_priceTxtFldKeyPressed

    private void idTxtFldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_idTxtFldKeyPressed
        // TODO add your handling code here:
        char c=evt.getKeyChar();
        if(Character.isDigit(c)||(c==evt.VK_BACK_SPACE)||(c==evt.VK_DELETE)){
            idTxtFld.setEditable(true);
        }else{
            idTxtFld.setEditable(false);
            JOptionPane.showMessageDialog(null, "Please enter numeric value only !!!");
           
        }
    }//GEN-LAST:event_idTxtFldKeyPressed

    private void typeTxtFldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_typeTxtFldKeyPressed
        // TODO add your handling code here:
        //accept letter whitespace and delete backspace key only
        char c=evt.getKeyChar();
        if(Character.isLetter(c)||(c==evt.VK_BACK_SPACE)||(c==evt.VK_DELETE)){
            typeTxtFld.setEditable(true);
        }else{
            typeTxtFld.setEditable(false);
            JOptionPane.showMessageDialog(null, "Please enter letter only !!!");
            
           
        }
        
    }//GEN-LAST:event_typeTxtFldKeyPressed

    private void modelTxtFldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_modelTxtFldKeyPressed
        // TODO add your handling code here:
        char c=evt.getKeyChar();
        if(Character.isLetterOrDigit(c)||(c==evt.VK_BACK_SPACE)||(c==evt.VK_DELETE)|| (c == evt.VK_SPACE)){
            modelTxtFld.setEditable(true);
        }else{
            modelTxtFld.setEditable(false);
            JOptionPane.showMessageDialog(null, "Please enter letter or number only !!!");
                
        }
        
       
    }//GEN-LAST:event_modelTxtFldKeyPressed

    private void batteryTxtFldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_batteryTxtFldKeyPressed
        // TODO add your handling code here:
        char c=evt.getKeyChar();
        if(Character.isDigit(c)||(c==evt.VK_BACK_SPACE)||(c==evt.VK_DELETE) ){
            batteryTxtFld.setEditable(true);
        }else{
            batteryTxtFld.setEditable(false);
            JOptionPane.showMessageDialog(null, "Please enter numeric value only !!!");
           
        }
        
    }//GEN-LAST:event_batteryTxtFldKeyPressed

    private void colorTxtFldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_colorTxtFldKeyPressed
        // TODO add your handling code here:
        char c=evt.getKeyChar();
        if(Character.isLetter(c)||(c==evt.VK_BACK_SPACE)||(c==evt.VK_DELETE)){
            colorTxtFld.setEditable(true);
        }else{
            colorTxtFld.setEditable(false);
            JOptionPane.showMessageDialog(null, "Please enter letter only !!!");
           
        }
        
    }//GEN-LAST:event_colorTxtFldKeyPressed

    private void AvailableBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AvailableBtnActionPerformed
        // TODO add your handling code here:
        String result;
        int count = 0;
        String searchbrand = (String)searchPCB.getSelectedItem();
        String Items = "";
        for (int i =0; i<dataTable.getRowCount(); i++){
            String value = (String)dataTable.getValueAt(i,2);
            System.out.print(value);
            if (searchbrand.equals(value)){
                String modelId = String.valueOf(dataTable.getValueAt(i, 0));
                String type = String.valueOf(dataTable.getValueAt(i, 1));
                String brand = String.valueOf(dataTable.getValueAt(i, 2));
                String model = String.valueOf(dataTable.getValueAt(i, 3));
                String storage = String.valueOf(dataTable.getValueAt(i, 4));
                String color = String.valueOf(dataTable.getValueAt(i, 5));
                String battery = String.valueOf(dataTable.getValueAt(i, 6));
                String price = String.valueOf(dataTable.getValueAt(i, 7));
                count ++;
                Items += String.valueOf(count)+"."+" Model ID: "+modelId+"\n"+"Type: "+type+"\n"+"Brand Name: "+brand+"\n"+
                        "Model Name: "+model+"\n"+"Storage: "+storage+"\n"+"Color: "+color+"\n"+"Battery: "+battery+" mAh "+"\n"+"Price: Rs. "+price+"\n"+"..................................."+"\n";
            }
        }
        result = " Products Available: "+count+ "\n"+Items;
        JOptionPane.showMessageDialog(null, result, "Products Found !!!", JOptionPane.INFORMATION_MESSAGE);
    
    }//GEN-LAST:event_AvailableBtnActionPerformed

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        // TODO add your handling code here:
      
        String search = searchPriceTxtFld.getText();
        try {

            if (search.equals("")) {
                getToolkit().beep();
                JOptionPane.showMessageDialog(null, "The search field is empty.", "ERROR MESSAGE",
                        JOptionPane.ERROR_MESSAGE);
            } else {
                sort();
                int number = Integer.parseInt(searchPriceTxtFld.getText());
                int low = 0;
                int high;
                high = Price.size() - 1;
                int index = search(low, high, number);
                if (index == -1) {
                    JOptionPane.showMessageDialog(null, "Product not found !!!");
                } else {
                    for (int i = 0; i < dataTable.getRowCount(); i++) {
                        if (index == Integer.parseInt((String) dataTable.getValueAt(i, 7))) {
                            JOptionPane.showMessageDialog(null, "\n Model ID: " + (String) dataTable.getValueAt(i, 0) + "\n Type: " + (String) dataTable.getValueAt(i, 1) + "\n Brand Name: " + (String) dataTable.getValueAt(i, 2) + "\n Model Name: " + (String) dataTable.getValueAt(i, 3) + "\n Storage: " + (String) dataTable.getValueAt(i, 4) + "\n Color: " + (String) dataTable.getValueAt(i, 5) + 
                                    "\n Battery: "+ (String)dataTable.getValueAt(i, 6) +" mAh"+ "\n Price: Rs." + (String) dataTable.getValueAt(i, 7)," Products according to price ", JOptionPane.INFORMATION_MESSAGE);

                            break;
                        }
                    }
                }

            }
            searchPriceTxtFld.setText("");
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage() + "\n" + "Please enter numeric value for this field!");
        } catch (Exception s) {
            JOptionPane.showMessageDialog(rootPane, s.getMessage());
        }


                                           
    }//GEN-LAST:event_searchBtnActionPerformed
    //Selection sort to sort the price
    public void sort() {
        int arr = 0;
        int temp;
        Price.clear();
        do{
            String s=(String) dataTable.getValueAt(arr, 7);
            if (s != null && s.length()!= 0 ) {
                Price.add(Integer.parseInt(s));
            }
            arr++;
        } while (arr < dataTable.getRowCount());
        for (int i = 0; i< (Price.size()); i++) {
            for (int j = 1; j<(Price.size()); j++) {
                if (Price.get(j)< Price.get(j - 1)) {
                    temp = Price.get(j);
                    Price.set(j, Price.get(j - 1));
                    Price.set(j - 1, temp);
                }
            }
        }
        Price.forEach(i -> {
            System.out.println(i);
            
            });
    }
    //This method is used to search product price using binary search algorithm
    public int search(int low, int high, int key){
        if(low <= high){
            int mid = low + (high - low) / 2;
            if (this.Price.get(mid) == key) {
                return this.Price.get(mid);
            }else if (this.Price.get(mid) > key) {
                return search(low, mid - 1, key);
            }else if (this.Price.get(mid) < key) {
                return search(mid + 1, high, key);
            
            }
        }
        return -1;
    }
    
    
               
    
    private void exitMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuActionPerformed
        // TODO add your handling code here:
        System.exit(0);
        exit();
    }//GEN-LAST:event_exitMenuActionPerformed

    private void searchPriceTxtFldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchPriceTxtFldKeyPressed
        // TODO add your handling code here:
        char c=evt.getKeyChar();
        if(Character.isDigit(c)||(c==evt.VK_BACK_SPACE)||(c==evt.VK_DELETE)){
            searchPriceTxtFld.setEditable(true);
        }else{
            searchPriceTxtFld.setEditable(false);
            JOptionPane.showMessageDialog(null, "Please enter numeric value only !!!");
            
           
        }
    }//GEN-LAST:event_searchPriceTxtFldKeyPressed

    private void umMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_umMenuActionPerformed
        // TODO add your handling code here:
        try{
            Runtime.getRuntime().exec("rundll32 url.dll,FileProtocolHandler "+"src\\Resources\\User manual.pdf");
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Error");
        }
    }//GEN-LAST:event_umMenuActionPerformed

    private void helpMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpMenuActionPerformed
      
    }//GEN-LAST:event_helpMenuActionPerformed

    private void aboutMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutMenuActionPerformed
        // TODO add your handling code here:
        try{
            Runtime.getRuntime().exec("rundll32 url.dll,FileProtocolHandler "+"src\\Resources\\About.pdf");
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Error");
        }
    }//GEN-LAST:event_aboutMenuActionPerformed

    private void arrBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arrBtnActionPerformed
        // TODO add your handling code here:
        //DefaultTableModel  = (DefaultTableModel)dataTable.getModel();
        TableRowSorter<TableModel> sorter = new TableRowSorter<TableModel>(dataTable.getModel());
        dataTable.setRowSorter(sorter);
        ArrayList<RowSorter.SortKey> sortKeys = new ArrayList<>();
 
        int columnIndexToSort = 0;
        sortKeys.add(new RowSorter.SortKey(columnIndexToSort, SortOrder.ASCENDING));
 
        sorter.setSortKeys(sortKeys);
        sorter.sort();
    }//GEN-LAST:event_arrBtnActionPerformed
    
        
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MobileCenterInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MobileCenterInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MobileCenterInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MobileCenterInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MobileCenterInfo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AvailableBtn;
    private javax.swing.JMenuBar MenuBar;
    private javax.swing.JPanel Panel;
    private javax.swing.JRadioButton RB128;
    private javax.swing.JRadioButton RB256;
    private javax.swing.JRadioButton RB32;
    private javax.swing.JRadioButton RB512;
    private javax.swing.JRadioButton RB64;
    private javax.swing.ButtonGroup RBbuttonGroup;
    private javax.swing.JMenuItem aboutMenu;
    private javax.swing.JLabel addBatteryLbl;
    private javax.swing.JComboBox<String> addBrandCB;
    private javax.swing.JLabel addBrandLbl;
    private javax.swing.JButton addBtn;
    private javax.swing.JLabel addColorLbl;
    private javax.swing.JLabel addModelLbl;
    private javax.swing.JPanel addPanel;
    private javax.swing.JLabel addPriceLbl;
    private javax.swing.JLabel addStorageLbl;
    private javax.swing.JButton arrBtn;
    private javax.swing.JTextField batteryTxtFld;
    private javax.swing.JButton billBtn;
    private javax.swing.JButton clearBtn;
    private javax.swing.JTextField colorTxtFld;
    private javax.swing.JTable dataTable;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JMenuItem exitMenu;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JLabel idLbl;
    private javax.swing.JTextField idTxtFld;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField modelTxtFld;
    private javax.swing.JMenuItem openMenu;
    private javax.swing.JTextField priceTxtFld;
    private javax.swing.JButton searchBtn;
    private javax.swing.JComboBox<String> searchPCB;
    private javax.swing.JLabel searchPLbl;
    private javax.swing.JPanel searchPanel;
    private javax.swing.JLabel searchPriceLbl;
    private javax.swing.JTextField searchPriceTxtFld;
    private javax.swing.JLabel titleLbl;
    private javax.swing.JLabel typeLbl;
    private javax.swing.JTextField typeTxtFld;
    private javax.swing.JMenuItem umMenu;
    private javax.swing.JButton updateBtn;
    // End of variables declaration//GEN-END:variables

    private int searchprice(int low, int high, int number) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    private void exit() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    private int findFilledRows(int totalRows) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
